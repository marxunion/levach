version: '3'

services:
  php:
    container_name: PHP
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DEBUG_MODE: ${DEBUG_MODE}
      IS_DEBUG_SERVER: true

      default_changeable_article_edit_timeout_minutes: ${default_changeable_article_edit_timeout_minutes}
      default_changeable_max_upload_filesize_mb: ${default_changeable_max_upload_filesize_mb}
      default_changeable_article_need_rating_to_approve_editorially: ${default_changeable_article_need_rating_to_approve_editorially}

      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}

      HOSTNAME: ${HOSTNAME}

      S3_HOST: ${S3_HOST}
      S3_IMAGES_BUCKET_NAME: ${S3_IMAGES_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      S3_PATH_STYLE_ENDPOINT: ${S3_PATH_STYLE_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}

      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      RECAPTCHA_SECRETKEY: ${RECAPTCHA_SECRETKEY}

    volumes:
      - ./:/var/www/levach/:rw
      - ./php/php.ini-dev:/usr/local/etc/php/php.ini:rw
    depends_on:
      - minio
    networks:
      - app-network

  minio:
    container_name: MINIO
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_SERVER_ACCESS_KEY: ${S3_ACCESS_KEY}
      MINIO_SERVER_SECRET_KEY: ${S3_SECRET_KEY}
    networks:
      - app-network
    depends_on:
      - node

  nginx:
    container_name: NGINX
    image: nginx:latest
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:rw
      - ./media:/var/www/levach/media:rw
      - ./frontend:/var/www/levach/frontend:rw
      - ./backend:/var/www/levach/backend:rw
      - ./robots.txt:/var/www/levach/robots.txt:rw
    environment:
      HOSTNAME: ${HOSTNAME}
    depends_on:
      - php
    ports:
      - "8080:80"
    networks:
      - app-network
    
  node:
    container_name: NODEJS
    image: node:hydrogen-slim
    working_dir: /var/www/levach/frontend
    volumes:
      - ./frontend:/var/www/levach/frontend:rw
    command: sh -c "npm install && npm run dev"
    environment:
      VITE_API_URL: http://nginx/api/
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - app-network

  postgres:
    container_name: POSTGRES
    image: postgres:alpine3.19
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

      ADMIN_DEFAULT_NAME: ${ADMIN_DEFAULT_NAME}
      ADMIN_DEFAULT_PASSWORD_ENCRYPTED: ${ADMIN_DEFAULT_PASSWORD_ENCRYPTED}
    volumes:
      - ./:/var/www/levach/:rw
      - postgres_data:/var/lib/postgresql/data
    depends_on:
      - composer
    networks:
      - app-network
  pgadmin:
    container_name: PGADMIN
    image: elestio/pgadmin:latest
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin:rw
    depends_on:
      - postgres
    networks:
      - app-network
  composer:
    container_name: COMPOSER
    image: composer:latest
    volumes:
      - ./backend:/var/www/levach/backend:rw
    working_dir: /var/www/levach/backend
    command: install

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin-data: